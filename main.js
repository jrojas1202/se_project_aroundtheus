!function(){"use strict";class e{constructor(e,t,s){let{name:n,link:r}=e;this._name=n,this._link=r,this._cardSelector=t,this._handleImageClick=s}_setEventListeners(){this._cardLikeButton.addEventListener("click",(()=>{this._handleLikeIcon()})),this._cardDeleteButton.addEventListener("click",(()=>{this._handleDeleteCard()})),this._cardImage.addEventListener("click",(()=>{this._handleImageClick({name:this._name,link:this._link})}))}_handleLikeIcon(){this._cardLikeButton.classList.toggle("card__like-button_active")}_handleDeleteCard(){this._cardElement.remove()}_getTemplate(){return document.querySelector(this._cardSelector).content.querySelector(".card").cloneNode(!0)}getView(){return this._cardElement=this._getTemplate(),this._cardLikeButton=this._cardElement.querySelector(".card__like-button"),this._cardDeleteButton=this._cardElement.querySelector(".card__delete-button"),this._cardImage=this._cardElement.querySelector(".card__image"),this._cardImage.src=this._link,this._cardImage.alt=this._name,this._cardElement.querySelector(".card__title").textContent=this._name,this._setEventListeners(),this._cardElement}}class t{constructor(e){this._popupElement=document.querySelector(e),this._popupCloseButton=this._popupElement.querySelector(".modal__close")}open(){this._popupElement.classList.add("modal_opened"),document.addEventListener("keydown",this._handleEscClose)}close(){this._popupElement.classList.remove("modal_opened"),document.removeEventListener("keydown",this._handleEscClose)}_handleEscClose=e=>{"Escape"===e.key&&this.close()};setEventListeners(){this._popupCloseButton.addEventListener("click",(()=>{this.close()})),this._popupElement.addEventListener("mousedown",(e=>{e.target.classList.contains("modal")&&this.close()}))}}class s extends t{constructor(e,t){super(e),this._form=this._popupElement.querySelector(".modal__form"),this._handleFormSubmit=t}_getInputValues(){const e={};return this._form.querySelectorAll(".modal__input").forEach((t=>{e[t.name]=t.value})),e}setEventListeners(){super.setEventListeners(),this._form.addEventListener("submit",this._submitHandler)}_submitHandler=e=>{e.preventDefault();const t=this._getInputValues();this._handleFormSubmit(t)};close(){super.close(),this._form.reset()}}var n=class{constructor(e,t){this._formSelector=e.formSelector,this.inputSelector=e.inputSelector,this._submitButtonSelector=e.submitButtonSelector,this._inactiveButtonClass=e.inactiveButtonClass,this._inputErrorClass=e._inputErrorClass,this._errorClass=e._errorClass,this._form=t}_showInputError(e){const t=this._form.querySelector(`#${e.id}-error`);e.classList.add(this._inputErrorClass),t.textContent=e.validationMessage,t.classList.add(this._errorClass)}_hideInputError(e){const t=this._form.querySelector(`#${e.id}-error`);e.classList.remove(this._inputErrorClass),t.textContent="",t.classList.remove(this._errorClass)}_checkInputValidity(e){if(!e.validity.valid)return this._showInputError(e);this._hideInputError(e)}_hasInvalidInput(e){return!this._inputElements.every((e=>e.validity.valid))}_disableButton(){this._submitButton.disabled=!0,this._submitButton.classList.add(this._inactiveButtonClass)}_enableButton(){this._submitButton.disabled=!1,this._submitButton.classList.remove(this._inactiveButtonClass)}_toggleButtonState(){if(this._hasInvalidInput())return this._disableButton();this._enableButton()}resetValidation(){this._inputElements.forEach((e=>{this._hideInputError(e)})),this._disableButton()}_setEventListeners(){this._inputElements=[...this._form.querySelectorAll(this._inputSelector)],this._submitButton=this._form.querySelector(this._submitButtonSelector),this._inputElements.forEach((e=>{e.addEventListener("input",(()=>{this._checkInputValidity(e),this._toggleButtonState()}))}))}enableValidation(){this._form.addEventListener("submit",(e=>{e.preventDefault()})),this._setEventListeners()}};const r={formSelector:".modal__form",inputSelector:".modal__input",submitButtonSelector:".modal__button",inactiveButtonClass:"modal__button_disabled",inputErrorClass:"modal__error",errorClass:"modal__error_visible"};var o;o=r,[...document.querySelectorAll(o.formSelector)].forEach((e=>{e.addEventListener("submit",(e=>{e.preventDefault()})),function(e,t){const{inputSelector:s,submitButtonSelector:n}=t,r=[...e.querySelectorAll(s)],o=e.querySelector(n);r.forEach((s=>{s.addEventListener("input",(n=>{!function(e,t,s){t.validity.valid?function(e,t,s){let{inputErrorClass:n,errorClass:r}=s;const o=e.querySelector(`#${t.id}-error`);t.classList.remove(n),o&&(o.textContent="",o.classList.remove(r))}(e,t,s):function(e,t,s){let{inputErrorClass:n,errorClass:r}=s;const o=e.querySelector(`#${t.id}-error`);t.classList.add(n),o&&(o.textContent=t.validationMessage,o.classList.add(r))}(e,t,s)}(e,s,t),function(e,t,s){const{inactiveButtonClass:n}=s,r=(e=>e.every((e=>e.validity.valid)))(e);r?function(e,t){e.classList.remove(t),e.disabled=!1}(t,n):function(e,t){e.classList.add(t),e.disabled=!0}(t,n)}(r,o,t)}))}))}(e,o)}));const i=document.querySelector("#new-card-modal").querySelector(".modal__form"),a=document.querySelector("#profile-title-input"),l=document.querySelector("#profile-description-input"),c=document.querySelector(".cards__list"),u=document.querySelector(".profile__edit-button"),d=document.querySelector(".profile__add-button"),m=(document.querySelector(".modal__input-title"),document.querySelector(".modal__input-link"),document.querySelector("#new-card-modal"),document.querySelector("#profile-edit-modal").querySelector(".modal__form")),_=new class{constructor(e,t){let{items:s,renderer:n}=e;this._items=s,this._renderer=n,this._container=t}renderItems(){this._items.forEach((e=>{this._renderer(e)}))}addItem(e){this._container.prepend(e)}}({items:[{name:"Yosemite Valley",link:"https://practicum-content.s3.us-west-1.amazonaws.com/software-engineer/around-project/yosemite.jpg"},{name:"Lake Louise",link:"https://practicum-content.s3.us-west-1.amazonaws.com/software-engineer/around-project/lake-louise.jpg"},{name:"Bald Mountains",link:"https://practicum-content.s3.us-west-1.amazonaws.com/software-engineer/around-project/bald-mountains.jpg"},{name:"Latemar",link:"https://practicum-content.s3.us-west-1.amazonaws.com/software-engineer/around-project/latemar.jpg"},{name:"Vanoise National",link:"https://practicum-content.s3.us-west-1.amazonaws.com/software-engineer/around-project/vanoise.jpg"},{name:"Lago di Braies",link:"https://practicum-content.s3.us-west-1.amazonaws.com/software-engineer/around-project/lago.jpg"}],renderer:e=>{const t=h(e);_.addItem(t)}},c);function h(t){return new e(t,"#card-template",p).getView()}function p(e){v.open(e)}_.renderItems();const E=new class{constructor(e){this.nameElement=document.querySelector(e.userNameSelector),this.jobElement=document.querySelector(e.userTitleSelector)}getUserInfo(){return{name:this.nameElement.textContent,job:this.jobElement.textContent}}setUserInfo(e){this.nameElement.textContent=e.name,this.jobElement.textContent=e.job}}({userNameSelector:".profile__title",userTitleSelector:".profile__description"}),v=new class extends t{constructor(e){super(e),this._containerImage=this._popupElement.querySelector(".modal__container-image"),this._containerImageTitle=this._popupElement.querySelector(".modal__image_title")}open(e){let{name:t,link:s}=e;const n=this._containerImage.querySelector(".modal__image");this._containerImageTitle.textContent=t,n.alt=t,n.src=s,super.open()}}("#image-modal",(function(e){v.open(e)}));v.setEventListeners();const f=new s("#profile-edit-modal",(function(e){E.setUserInfo(e),f.close()}));f.setEventListeners(),u.addEventListener("click",(()=>{!function(){const e=E.getUserInfo();a.value=e.name,l.value=e.job,f.open()}()}));const S=new s("#new-card-modal",(function(e){const t=h(e);_.addItem(t),S.close()}));S.setEventListeners(),d.addEventListener("click",(()=>{y.resetValidation(),S.open()})),new n(r,m).enableValidation();const y=new n(r,i);y.enableValidation()}();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,